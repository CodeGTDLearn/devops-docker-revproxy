worker_processes 4;
events {
    worker_connections 1024;
        }

http{
     sendfile on;


    #1) Nome fake para o 'Compose Service' da WebApp (SERVIDOR-TARGET)
    upstream url-real-escalada {

        least_conn;
        #SERVIDOR HYPER-V (LOCAL)
        server revproxbal_webapp_1:8080;
        #a) "server": comando do nginx que define a WEBAPP escalada, como um server
        #b) "revproxbal": nome da aplicação
        #c) "_webapp_": nome do 'Compose Service' da WebApp
        #d) "1" : numero do container/service escalado
        #e) ":8080": Porta escutada no "listen 8080 do NginX"

        # ASPECTOS RELEVANTES SOBRE A SCALING:
        # a) STATIC-SCALING (PRESETADA NO DOCKER-COMPOSE)
        #    - Totalmente possivel do nginx
        #    - Criando os clones da webapp "AB-INITIO"
        # b) DYNAMIC-SCALING (DOCKER-COMPOSE-SCALE)
        #    - Nao e possivel (ERRO OCORRIDO)
        #    - Escalar com "docker-compose scale" nao foi possivel
        #             "host not found in upstream "revproxbal_webapp_2:8080"
        #             "Stopping and removing revproxbal_webapp_2 ... ... ...

        #SERVIDOR AWS (REMOTO)
        server 3.86.23.170:8080;
        #a) "3.86.23.170": IPv4 Public IP
        #b) "8080": Porta escutada no "listen 8080 do NginX"

    #OBS1: Os services 'WebApp' e o 'Router' devem estar na mesma 'network' no compose
    #OBS2: DOCKER-COMPOSE <COMPOSE-FILE>: Mostra o nome dos servidores escalados (copy and paste)
    }

    server {
        listen 8080;

        gzip on;

        location /url-vista-no-browser {
        #PROXY REVERSO (URL-VISTA-NO-BOWSER)
        #a)"/url-vista-no-browser": URL receptora dos request, EXPOSTA NO BROWSER
        #b) EX: http://{{url}}:1111/url-vista-no-browser

        #ELEMENTOS DE REDIRECIONAMENTO DO PROXY REVERSO (url-vista-no-browser)
        #a) "proxy_pass": 'http://url-real-escalada' - Opcao "Upstream" (logo acima) - webapp REAL escalada
        #b) "RequestMapping do controller": '/users': URI interna da WEBAPP no codigo Spring
        proxy_pass http://url-real-escalada/users;
            proxy_redirect off;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }
}